##################################################################
#   REFERENCIA A ELEMENTOS DE POM y settings.xml CON EL @value@  #(dicho delimitador  estandar ${} a @ fue redefinido por spring-boot-starter-parent, igual se puede customizar si queres)
#################################################################
# Resumen todo que quieras relacionar de maven es con @

# POM Elements:
###############
#Notice the @property@ instead of ${property}. in the application.properties file.
#The spring-boot-starter-parent pom :
proyecto.nombre=@project.name@
proyecto.version=@project.version@

# POM <properties> Elements
###########################
mi.property.copada=@via.custom.pom.properties@

# setting.xml <properties> Elements
#########################
mi.property.via.settings=@ruta@

# Add this to settings.xml file
#<settings>
#   [...]
#   <profiles>
#       <profile>
#           <id>dev</id>
#           <properties>
#               <ruta>/dev/path</ruta>
#           </properties>
#       </profile>
#   </profiles>
#
#   <activeProfiles>
#       <activeProfile>dev</activeProfile>
#   </activeProfiles>
#</settings>

###################################################
#         Custom System Properties (-Dkey=value)
###################################################
# Resumen custom system properties con ${} con el delimitador estandar nomas

# Custom System Properties (-D) example: mvn clean install -Dvia.linea.comandos=Holanda
# Remeber to add this arg to mvn command
command.line.prop=${via.linea.comandos}

#########################################################
#         Tip: Property On the Fly - Command Line (Only Spring Boot)
##########################################################
# Ojo: las properties que agregues usando --property=value solo va a estar disponible ejecutando tu app java con comando java (No va a estar usando mvn y su plugin spring-boot-run)
# java tuapp.jar --property=value

#########################################################
#         Tip: Property placeholder  (Only Spring Boot)
##########################################################
# Property placeholder then u can set --port=9000 (Property On the Fly) on any value in runtime sino el custom va a ser 8080
# Tip: Como ves ese formato de spring --property=value te permite agregar properties on the fly al momento de ejecutar la app
# al poner --property=value en linea de comandos pensalo como si fuera una property que la pones en el application.properties
server.port=${port:8080} 

###########################################################################################
# classpath: relative path para Recursos Estaticos dentro de resources (Only Spring Boot) #
###########################################################################################
# Para tus archivos estaticos dentro de la carpeta resource pordes referenciarlos
# mediante ruta relativa (classpath:) gracias a que spring copia el contenido de lo que haya dentro de src/main/resouces dentro del classpath.
# Es decir en tu classpath (target/classes) vas a a tener tanto tus (.class) como los recursos estaticos que definas src/main/resouces.
# Recordando que el classpath es el lugar donde va a buscar las clases (.class) la jvm para ejecutar tu programa.

Ejemplo
tu.archivo.sql.path=classpath:/db/inserts.sql

